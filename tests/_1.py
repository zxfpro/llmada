


from typing import Iterator, Generator

class BianXieAdapter(ModelAdapter):
    """BianXie格式的适配器"""

    def __init__(
        self,
        model_name: str = "gemini-2.5-flash-preview-05-20-nothinking",
        api_key: str = None,
        api_base: str = "https://api.bianxie.ai/v1/chat/completions",
    ):
        """初始化
        正常情况下, 这两个参数都不需要传入, 而是会自动寻找环境变量,除非要临时改变api_key.
            api_base 不需要特别指定
        Args:
            api_key (str): API key for authentication.
            api_base (str): Base URL for the API endpoint.
        """

    def product(self, prompt: str) -> str:
        """Generate a response from the model based on a single prompt.
        Args:
            prompt (str): The input text prompt to generate a response for.
        Returns:
            str: The response generated by the model.
        """


    async def aproduct(self, prompt: str) -> str:
        """Generate a response from the model based on a single prompt.

        Args:
            prompt (str): The input text prompt to generate a response for.

        Returns:
            str: The response generated by the model.
        """

    def product_stream(self, prompt: str) -> Iterator[str]:
        """Generate a response from the model based on a single prompt.

        Args:
            prompt (str): The input text prompt to generate a response for.

        Returns:
            str: The response generated by the model.
        """

    async def aproduct_stream(self, prompt: str) -> Iterator[str]:
        """Generate a response from the model based on a single prompt.

        Args:
            prompt (str): The input text prompt to generate a response for.

        Returns:
            str: The response generated by the model.
        """
